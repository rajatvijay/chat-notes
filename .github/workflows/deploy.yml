name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run quality checks
        run: |
          pnpm lint
          pnpm test
          pnpm build

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy database migrations
        run: |
          echo "Deploying database migrations to production..."
          echo "${{ secrets.SUPABASE_DB_PASSWORD }}" | supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      - name: Health check
        run: |
          sleep 30
          curl -f ${{ steps.deploy.outputs.preview-url }}/api/health || exit 1

      - name: Test API endpoints
        run: |
          # Test classification endpoint
          response=$(curl -s -X POST "${{ steps.deploy.outputs.preview-url }}/api/classify" \
            -H "Content-Type: application/json" \
            -d '{"note_id":"test","content":"Buy groceries tomorrow"}' \
            -w "%{http_code}" || echo "000")
          
          if [[ "$response" != *"200"* ]]; then
            echo "Classification endpoint test failed"
            exit 1
          fi
          
          echo "All API tests passed"

      - name: Lighthouse performance check
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: ${{ steps.deploy.outputs.preview-url }}
          configPath: lighthouse-budget.json
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

      - name: Notify deployment success
        if: success()
        run: |
          echo "ðŸŽ‰ Deployment successful!"
          echo "URL: ${{ steps.deploy.outputs.preview-url }}"
          echo "Health check: ${{ steps.deploy.outputs.preview-url }}/api/health"